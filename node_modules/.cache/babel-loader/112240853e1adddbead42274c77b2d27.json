{"remainingRequest":"/Users/mac/work_space/vue/wblog/node_modules/babel-loader/lib/index.js!/Users/mac/work_space/vue/wblog/src/utils/http.js","dependencies":[{"path":"/Users/mac/work_space/vue/wblog/src/utils/http.js","mtime":1624350391342},{"path":"/Users/mac/work_space/vue/wblog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/work_space/vue/wblog/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvbWFjL3dvcmtfc3BhY2UvdnVlL3dibG9nL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL21hYy93b3JrX3NwYWNlL3Z1ZS93YmxvZy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKCnZhciBIdHRwID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBIdHRwKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEh0dHApOwoKICAgIHRoaXMuaW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoewogICAgICBiYXNlVVJMOiAnaHR0cDovL2xvY2FsaG9zdDo4MDgxL2FwaS92MScsCiAgICAgIHRpbWVvdXQ6IDEwMDAKICAgIH0pLCAvL+a3u+WKoOS4gOS4quWTjeW6lOaLpuaIquWZqCwg5Yik5patIOWmguaenHRva2Vu5peg5pWIIOWwseWIoOmZpOacrOWcsGxvY2FsU3RvcmFnZeS4reeahHRva2VuCiAgICB0aGlzLmluc3RhbmNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIC8vIOWvueWTjeW6lOaVsOaNruWBmueCueS7gOS5iAogICAgICAvL2NvbnNvbGUubG9nKCLooqvmi6bmiKrlmajmi6bmiKrkuoYiKQogICAgICBpZiAocmVzcG9uc2UuZGF0YS5jb2RlICE9PSAyMDAwKSB7CiAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oInRva2VuIik7CiAgICAgIH0KCiAgICAgIHJldHVybiByZXNwb25zZTsKICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAvLyDlr7nlk43lupTplJnor6/lgZrngrnku4DkuYgKICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICAgIH0pOwogIH0gLy/nlKjmnaXlgZrmtYvor5XnmoRhcGkKCgogIF9jcmVhdGVDbGFzcyhIdHRwLCBbewogICAga2V5OiAiYXBpRGVtbyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYXBpRGVtbyh1cmwsIHRva2VuKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIF90aGlzLmluc3RhbmNlLmdldCh1cmwsIHsKICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiAnQmVhcmVyICcgKyB0b2tlbgogICAgICAgICAgfQogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgLy9jb25zb2xlLmxvZyh1cmwpCiAgICAgICAgICByZXNvbHZlKHJlc3VsdCk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgICAgcmVqZWN0KGVycik7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSAvL+azqOWGjOeahGFwaQoKICB9LCB7CiAgICBrZXk6ICJzaWduVXAiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNpZ25VcCh1cmwsIHBhcmFtcykgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgX3RoaXMyLmluc3RhbmNlLnBvc3QodXJsLCBwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgcmVzb2x2ZShyZXN1bHQpOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgIHJlamVjdChlcnIpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0gLy/nmbvpmYbnmoRhcGkKCiAgfSwgewogICAga2V5OiAiYXV0aCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gYXV0aCh1cmwsIHBhcmFtcykgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgX3RoaXMzLmluc3RhbmNlLnBvc3QodXJsLCBwYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgcmVzb2x2ZShyZXN1bHQpOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgIHJlamVjdChlcnIpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBIdHRwOwp9KCk7CgpleHBvcnQgZGVmYXVsdCBIdHRwOw=="},{"version":3,"sources":["/Users/mac/work_space/vue/wblog/src/utils/http.js"],"names":["axios","Http","instance","create","baseURL","timeout","interceptors","response","use","data","code","localStorage","removeItem","error","Promise","reject","url","token","resolve","get","headers","then","result","catch","err","params","post"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,I;AACJ,kBAAc;AAAA;;AACZ,SAAKC,QAAL,GAAgBF,KAAK,CAACG,MAAN,CAAa;AAC3BC,MAAAA,OAAO,EAAE,8BADkB;AAE3BC,MAAAA,OAAO,EAAE;AAFkB,KAAb,CAAhB,EAIE;AACA,SAAKH,QAAL,CAAcI,YAAd,CAA2BC,QAA3B,CAAoCC,GAApC,CAAwC,UAAUD,QAAV,EAAoB;AAC1D;AACA;AACA,UAAIA,QAAQ,CAACE,IAAT,CAAcC,IAAd,KAAuB,IAA3B,EAAiC;AAC/BC,QAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACD;;AACD,aAAOL,QAAP;AACD,KAPD,EAOG,UAAUM,KAAV,EAAiB;AAClB;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,KAVD,CALF;AAgBD,G,CAED;;;;;WACA,iBAAQG,GAAR,EAAaC,KAAb,EAAoB;AAAA;;AAClB,aAAO,IAAIH,OAAJ,CAAY,UAACI,OAAD,EAAUH,MAAV,EAAqB;AACtC,QAAA,KAAI,CAACb,QAAL,CAAciB,GAAd,CAAkBH,GAAlB,EAAuB;AAAEI,UAAAA,OAAO,EAAE;AAAE,6BAAiB,YAAYH;AAA/B;AAAX,SAAvB,EACGI,IADH,CACQ,UAACC,MAAD,EAAY;AAChB;AACAJ,UAAAA,OAAO,CAACI,MAAD,CAAP;AACD,SAJH,EAKGC,KALH,CAKS,UAACC,GAAD,EAAS;AACdT,UAAAA,MAAM,CAACS,GAAD,CAAN;AACD,SAPH;AAQD,OATM,CAAP;AAUD,K,CACD;;;;WACA,gBAAOR,GAAP,EAAYS,MAAZ,EAAoB;AAAA;;AAClB,aAAO,IAAIX,OAAJ,CAAY,UAACI,OAAD,EAAUH,MAAV,EAAqB;AACtC,QAAA,MAAI,CAACb,QAAL,CAAcwB,IAAd,CAAmBV,GAAnB,EAAwBS,MAAxB,EACGJ,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,UAAAA,OAAO,CAACI,MAAD,CAAP;AACD,SAHH,EAIGC,KAJH,CAIS,UAACC,GAAD,EAAS;AACdT,UAAAA,MAAM,CAACS,GAAD,CAAN;AACD,SANH;AAOD,OARM,CAAP;AASD,K,CACD;;;;WACA,cAAKR,GAAL,EAAUS,MAAV,EAAkB;AAAA;;AAChB,aAAO,IAAIX,OAAJ,CAAY,UAACI,OAAD,EAAUH,MAAV,EAAqB;AACtC,QAAA,MAAI,CAACb,QAAL,CAAcwB,IAAd,CAAmBV,GAAnB,EAAwBS,MAAxB,EACGJ,IADH,CACQ,UAACC,MAAD,EAAY;AAChBJ,UAAAA,OAAO,CAACI,MAAD,CAAP;AACD,SAHH,EAIGC,KAJH,CAIS,UAACC,GAAD,EAAS;AACdT,UAAAA,MAAM,CAACS,GAAD,CAAN;AACD,SANH;AAOD,OARM,CAAP;AASD;;;;;;AAKH,eAAevB,IAAf","sourcesContent":["import axios from 'axios'\n\nclass Http {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: 'http://localhost:8081/api/v1',\n      timeout: 1000\n    }),\n      //添加一个响应拦截器, 判断 如果token无效 就删除本地localStorage中的token\n      this.instance.interceptors.response.use(function (response) {\n        // 对响应数据做点什么\n        //console.log(\"被拦截器拦截了\")\n        if (response.data.code !== 2000) {\n          localStorage.removeItem(\"token\")\n        }\n        return response;\n      }, function (error) {\n        // 对响应错误做点什么\n        return Promise.reject(error);\n      });\n  }\n\n  //用来做测试的api\n  apiDemo(url, token) {\n    return new Promise((resolve, reject) => {\n      this.instance.get(url, { headers: { 'Authorization': 'Bearer ' + token } })\n        .then((result) => {\n          //console.log(url)\n          resolve(result)\n        })\n        .catch((err) => {\n          reject(err)\n        })\n    })\n  }\n  //注册的api\n  signUp(url, params) {\n    return new Promise((resolve, reject) => {\n      this.instance.post(url, params)\n        .then((result) => {\n          resolve(result)\n        })\n        .catch((err) => {\n          reject(err)\n        })\n    })\n  }\n  //登陆的api\n  auth(url, params) {\n    return new Promise((resolve, reject) => {\n      this.instance.post(url, params)\n        .then((result) => {\n          resolve(result)\n        })\n        .catch((err) => {\n          reject(err)\n        })\n    })\n  }\n\n\n}\n\nexport default Http"]}]}